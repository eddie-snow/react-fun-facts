{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anilt\\\\my-app\\\\src\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubePlayer = () => {\n  _s();\n  const [videoTitle, setVideoTitle] = useState('Sample Video');\n  const [videoDescription, setVideoDescription] = useState('This is a sample video description.');\n  const [isPlaying, setPlaying] = useState(false);\n  const handlePlayPause = () => {\n    setPlaying(!isPlaying);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"youtube-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        width: \"560\",\n        height: \"315\",\n        src: \"https://www.youtube.com/embed/VIDEO_ID\",\n        title: \"YouTube Video Player\",\n        frameBorder: \"0\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: videoTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: videoDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handlePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTubePlayer, \"yAZMgUVVajUwwOBM8kN7tLRyye4=\");\n_c = YouTubePlayer;\nexport default YouTubePlayer;\nvar _c;\n$RefreshReg$(_c, \"YouTubePlayer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YouTubePlayer","_s","videoTitle","setVideoTitle","videoDescription","setVideoDescription","isPlaying","setPlaying","handlePlayPause","className","children","width","height","src","title","frameBorder","allowFullScreen","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/anilt/my-app/src/index.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst YouTubePlayer = () => {\r\n  const [videoTitle, setVideoTitle] = useState('Sample Video');\r\n  const [videoDescription, setVideoDescription] = useState('This is a sample video description.');\r\n  const [isPlaying, setPlaying] = useState(false);\r\n\r\n  const handlePlayPause = () => {\r\n    setPlaying(!isPlaying);\r\n  };\r\n\r\n  return (\r\n    <div className=\"youtube-player\">\r\n      <div className=\"video-container\">\r\n        {/* You can replace the iframe src with the actual YouTube video embed URL */}\r\n        <iframe\r\n          width=\"560\"\r\n          height=\"315\"\r\n          src=\"https://www.youtube.com/embed/VIDEO_ID\"\r\n          title=\"YouTube Video Player\"\r\n          frameBorder=\"0\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      </div>\r\n      <div className=\"video-info\">\r\n        <h2>{videoTitle}</h2>\r\n        <p>{videoDescription}</p>\r\n      </div>\r\n      <div className=\"controls\">\r\n        <button onClick={handlePlayPause}>{isPlaying ? 'Pause' : 'Play'}</button>\r\n        <button>Next</button>\r\n        <button>Previous</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YouTubePlayer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,cAAc,CAAC;EAC5D,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,qCAAqC,CAAC;EAC/F,MAAM,CAACS,SAAS,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5BD,UAAU,CAAC,CAACD,SAAS,CAAC;EACxB,CAAC;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BX,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAE9BX,OAAA;QACEY,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,KAAK;QACZC,GAAG,EAAC,wCAAwC;QAC5CC,KAAK,EAAC,sBAAsB;QAC5BC,WAAW,EAAC,GAAG;QACfC,eAAe;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACNrB,OAAA;MAAKU,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBX,OAAA;QAAAW,QAAA,EAAKR;MAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBrB,OAAA;QAAAW,QAAA,EAAIN;MAAgB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eACNrB,OAAA;MAAKU,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBX,OAAA;QAAQsB,OAAO,EAAEb,eAAgB;QAAAE,QAAA,EAAEJ,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACzErB,OAAA;QAAAW,QAAA,EAAQ;MAAI;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACrBrB,OAAA;QAAAW,QAAA,EAAQ;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CAjCID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}